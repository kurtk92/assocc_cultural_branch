;Cultural_model.nls created by Bart de Bruin (TU Delft) and Kurt Kreulen (TU Delft), efforts coordinated by Amineh Ghorbani (TU Delft)

;Short description of procedures included in this nls file:
;setup-person-values-and-needs-based-on-cultural-model: is called in setup.nls, calls procedures that calibrate agent values and needs according to the cultural model
;set-initial-need-satisfaction-levels; initiates need satisfaction levels (i.e. water tank levels)
;calibrate-importance-weights-of-needs; each agent ascribes a particular importance to each of its weights based on the configuration of its value system
;set-values-based-on-culture; agent value systems are calibrated on the basis of the settings of the Hofstede cultural dimensions (see ASSOCC model interface)
;increase-logical-consistency-of-agent-value-systems; agent value systems are structured according to the Schwartz circumplex value model ...
; ... (i.e. values placed closer to one another in the circumplex correlate positively, while values placed further apart in the circumplex correlate negatively)
;load-nations-cultural-profile-settings: calibrate Hofstede dimensions based on a nation's Hofstede dimension scorecard

globals [
  value-std-dev 
]

to setup-person-values-and-needs
  calibrate-agent-value-systems
  calibrate-importance-weights-of-needs
  set-initial-need-satisfaction-levels
  set-social-distance-profile
end

to calibrate-agent-value-systems
  set-values-based-on-culture
  recalibrate-value-system-according-to-age-group-of-agent
  increase-logical-consistency-of-agent-value-systems
  
  ;Round values to 3 decimals to make internal checks more easily executable
  ;Define floor as 0.01 in order to avoid potential problems with division by 0 throughout the model
  ask people [
    set importance-given-to-hedonism-value precision (clamp 0.01 100 importance-given-to-hedonism-value) 3
    set importance-given-to-stimulation-value precision (clamp 0.01 100 importance-given-to-stimulation-value) 3
    set importance-given-to-self-direction-value precision (clamp 0.01 100 importance-given-to-self-direction-value) 3
    set importance-given-to-universalism-value precision (clamp 0.01 100 importance-given-to-universalism-value) 3
    set importance-given-to-benevolence-value precision (clamp 0.01 100 importance-given-to-benevolence-value) 3
    set importance-given-to-conformity-tradition-value precision (clamp 0.01 100 importance-given-to-conformity-tradition-value) 3
    set importance-given-to-security-value precision (clamp 0.01 100 importance-given-to-security-value) 3
    set importance-given-to-power-value precision (clamp 0.01 100 importance-given-to-power-value) 3
    set importance-given-to-achievement-value precision (clamp 0.01 100 importance-given-to-achievement-value) 3
  ]
  
end

to set-initial-need-satisfaction-levels
  ;NOTE: The water tanks for financial safety (SAFETY), food safety (SURVIVAL), financial survival (SURVIVAL), health (SURVIVAL) are located in the need_defintion.nls file
  ;The subneeds defined in need_defintion.nls are not formalized as people-own variables but as to-reporter functions
  
  ask people [
    ;Initiate need satisfaction levels (i.e. fill up watertanks)
    
    ;SURVIVAL:
    set sleep-satisfaction-level random-float 0.2 + 0.8
    
    ;SAFETY:
    set risk-avoidance-satisfaction-level random-float 0.3 + 0.7
    set compliance-satisfaction-level random-float 0.3 + 0.7
    set conformity-satisfaction-level random-float 1
    
    ;BELONGING:
    set belonging-satisfaction-level random-float 0.5 + 0.5
    
    ;SELF-ESTEEM:
    set leisure-satisfaction-level random-float 0.1 + 0.9
    set luxury-satisfaction-level random-float 0.3 + 0.7
    set autonomy-satisfaction-level 0.95
  ]
end

to set-social-distance-profile
  ask people [
    ;Calibrate social distance variables
    ifelse make-social-distance-profile-value-based? [
      
      ;extroverts tend to value achievement, stimulation, hedonism (Roccas et al., 2002)
      ;extroversion relates to tendency to approach / interact with people.
      let extroversion (importance-given-to-achievement-value + importance-given-to-stimulation-value + (0.5 * importance-given-to-hedonism-value)) / 2.5
      set extroversion extroversion / 100
      
      ;introverts tend to value conformity & tradition, security (Roccas et al., 2002)
      ;introversion relates to tendency to avoid / not interact with people.
      let introversion (importance-given-to-conformity-tradition-value + importance-given-to-security-value) / 2
      set introversion introversion / 100
      
      ifelse extroversion > introversion [
        ;the more extrovert the agent, the HIGHER its social distance profile.
        set social-distance-profile clamp 0 1 random-normal extroversion std-dev-social-distance-profile
      ][
        ;the more introvert the agent, the LOWER its social distance profile.
        set social-distance-profile clamp 0 1 random-normal (1 - introversion) std-dev-social-distance-profile
      ]
    ][
      ;if social-distance-profile is not value based? then set it according to the relevant slider settings
      set social-distance-profile clamp 0 1 random-normal mean-social-distance-profile std-dev-social-distance-profile
    ]
    set is-I-apply-social-distancing? false
  ]
end


to recalibrate-value-system-according-to-age-group-of-agent
  ask people [
    
    ;coefficients based on "Correlations of Value Priorities with Age" (see http://essedunet.nsd.uib.no/cms/topics/1/2/2.html)
    let HED_coeff -0.34
    let STM_coeff -0.38
    let SD_coeff -0.06
    let UNI_coeff 0.12
    let BEN_coeff 0.13
    let CT_coeff 0.33
    let SEC_coeff 0.26
    let POW_coeff -0.07
    let ACH_coeff -0.25
    
    let coeffs (list
      HED_coeff
      STM_coeff
      SD_coeff
      UNI_coeff
      BEN_coeff
      CT_coeff
      SEC_coeff
      POW_coeff
      ACH_coeff)
    
    let value_system (list
      importance-given-to-hedonism-value
      importance-given-to-stimulation-value
      importance-given-to-self-direction-value
      importance-given-to-universalism-value
      importance-given-to-benevolence-value
      importance-given-to-conformity-tradition-value
      importance-given-to-security-value
      importance-given-to-power-value
      importance-given-to-achievement-value)
    
    let weight 0
    let recalibrated_value_system []
    if age = "young" [set weight 3 * influence-of-age-on-value-system]
    if age = "student" [set weight 2 * influence-of-age-on-value-system]
    if age = "worker" [set weight 1 * influence-of-age-on-value-system]
    if age = "retired" [set weight 0 * influence-of-age-on-value-system]
    set recalibrated_value_system (map [ [c v] -> clamp 0 100 (v - (c * weight)) ] coeffs value_system)
    
    set importance-given-to-hedonism-value item 0 recalibrated_value_system
    set importance-given-to-stimulation-value item 1 recalibrated_value_system
    set importance-given-to-self-direction-value item 2 recalibrated_value_system
    set importance-given-to-universalism-value item 3 recalibrated_value_system
    set importance-given-to-benevolence-value item 4 recalibrated_value_system
    set importance-given-to-conformity-tradition-value item 5 recalibrated_value_system
    set importance-given-to-security-value item 6 recalibrated_value_system
    set importance-given-to-power-value item 7 recalibrated_value_system
    set importance-given-to-achievement-value item 8 recalibrated_value_system
    
  ]
end

to calibrate-importance-weights-of-needs
  
  ;For each agent: set the importance ascribed to its needs
  ;Importance weights ascribed to needs vary between 0 and 1
  
  ;IMPORTANT VARIABLES:
  ;maslow-multiplier = modulates the hierarchical aspect of maslow needs ...
  ; ... i.e. the higher the maslow-multiplier, the higher the importance ascribed to lower level needs vis-a-vis those situated at higher levels in the Maslow pyramid.
  ;survival-multiplier = increases the importance ascribed to biological (survival) needs vis-a-vis psychological needs (safety, belonging, esteem).
  
  ask people [
    ;initiate maslow-based importance weights for the maslow need categories
    let weight-esteem-needs-category 1
    let weight-belonging-needs-category weight-esteem-needs-category * (1 + maslow-multiplier)
    let weight-safety-needs-category weight-belonging-needs-category * (1 + maslow-multiplier)
    let weight-survival-needs-category weight-safety-needs-category * ((1 + maslow-multiplier) * survival-multiplier)
    
    ;Set importance weights of subneeds of SURVIVAL
    set importance-weight-food-safety (weight-survival-needs * weight-survival-needs-category)
    set importance-weight-financial-survival (weight-survival-needs * weight-survival-needs-category)
    set importance-weight-health (weight-survival-needs * weight-survival-needs-category)
    set importance-weight-sleep (weight-survival-needs * weight-survival-needs-category)
    
    
    ;Set importance weights of subneeds of SAFETY
    set importance-weight-financial-stability (importance-given-to-power-value / 100) * weight-safety-needs-category
    set importance-weight-risk-avoidance (importance-given-to-security-value / 100) * weight-safety-needs-category
    set importance-weight-compliance ((importance-given-to-conformity-tradition-value + importance-given-to-security-value) / (2 * 100)) * weight-safety-needs-category
    set importance-weight-conformity (importance-given-to-conformity-tradition-value / 100) * weight-safety-needs-category
    
    ;Set importance weights of subneeds of BELONGING
    set importance-weight-belonging-subneed ((importance-given-to-benevolence-value + importance-given-to-conformity-tradition-value) / (2 * 100)) * weight-belonging-needs-category
    
    ;Set importance weights of subneeds of ESTEEM
    set importance-weight-luxury ((importance-given-to-hedonism-value + importance-given-to-power-value) / (2 * 100)) * weight-esteem-needs-category
    set importance-weight-leisure ((importance-given-to-hedonism-value + importance-given-to-stimulation-value) / (2 * 100)) * weight-esteem-needs-category
    set importance-weight-autonomy ((importance-given-to-self-direction-value + importance-given-to-achievement-value) / (2 * 100)) * weight-esteem-needs-category
    
    let total-sum-of-weights sum (list
      importance-weight-food-safety
      importance-weight-financial-survival
      importance-weight-health
      importance-weight-sleep
      importance-weight-conformity
      importance-weight-financial-stability
      importance-weight-risk-avoidance
      importance-weight-compliance
      importance-weight-belonging-subneed
      importance-weight-luxury
      importance-weight-leisure
      importance-weight-autonomy)
    
    ;Normalize all the importance weights so that they sum up to 1
    set importance-weight-food-safety (importance-weight-food-safety / total-sum-of-weights)
    set importance-weight-financial-survival (importance-weight-financial-survival / total-sum-of-weights)
    set importance-weight-health (importance-weight-health / total-sum-of-weights)
    set importance-weight-sleep (importance-weight-sleep / total-sum-of-weights)
    set importance-weight-conformity (importance-weight-conformity / total-sum-of-weights)
    set importance-weight-financial-stability (importance-weight-financial-stability / total-sum-of-weights)
    set importance-weight-risk-avoidance (importance-weight-risk-avoidance / total-sum-of-weights)
    set importance-weight-compliance (importance-weight-compliance / total-sum-of-weights)
    set importance-weight-belonging-subneed (importance-weight-belonging-subneed / total-sum-of-weights)
    set importance-weight-luxury (importance-weight-luxury / total-sum-of-weights)
    set importance-weight-leisure (importance-weight-leisure / total-sum-of-weights)
    set importance-weight-autonomy (importance-weight-autonomy / total-sum-of-weights)
  ]
end

to set-values-based-on-culture
  
  ;;; HOFSTEDE - SCHWARTZ MAPPING ;;;
  
  let UAI_pos uncertainty-avoidance
  let PDI_pos power-distance
  let MAS_pos masculinity-vs-femininity
  let IDV_pos individualism-vs-collectivism
  let IVR_pos indulgence-vs-restraint
  let LTO_pos long-vs-short-termism
  
  let UAI_neg 100 - uncertainty-avoidance
  let PDI_neg 100 - power-distance
  let MAS_neg 100 - masculinity-vs-femininity
  let IDV_neg 100 - individualism-vs-collectivism
  let IVR_neg 100 - indulgence-vs-restraint
  let LTO_neg 100 - long-vs-short-termism
  
  let mean_HED 0
  let mean_STM 0
  let mean_SD 0
  let mean_UNI 0
  let mean_BEN 0
  let mean_CT 0
  let mean_SEC 0
  let mean_POW 0
  let mean_ACH 0
  
  let max_val max-random-value-generator
  let min_val min-random-value-generator
  
  if hofstede-schwartz-mapping-mode = "old settings" [
    set mean_HED (IDV_pos + IVR_pos) / 2
    set mean_STM (IDV_pos + UAI_neg + PDI_neg ) / 3
    set mean_SD (IDV_pos + UAI_neg + PDI_neg ) / 3
    set mean_UNI (IDV_neg + UAI_neg + MAS_neg) / 3
    set mean_BEN (IDV_neg + UAI_neg + MAS_neg) / 3
    set mean_CT (IDV_neg + UAI_pos + PDI_pos + IVR_neg) / 4
    set mean_SEC (IDV_neg + UAI_pos + PDI_pos) / 3
    set mean_POW (IDV_pos + UAI_pos + MAS_pos) / 3
    set mean_ACH (IDV_pos + MAS_pos) / 2
  ]
  
  if hofstede-schwartz-mapping-mode = "theoretical" [
    set mean_HED IVR_pos
    set mean_STM UAI_neg
    set mean_SD IDV_pos
    set mean_UNI (PDI_neg + MAS_neg) / 2
    set mean_BEN MAS_neg
    set mean_CT (PDI_pos + IDV_neg + LTO_neg + IVR_neg) / 4
    set mean_SEC UAI_pos
    set mean_POW (PDI_pos + MAS_pos) / 2
    set mean_ACH MAS_pos
  ]
  
  if hofstede-schwartz-mapping-mode = "empirical" [
    set mean_HED (IDV_neg + UAI_pos + IVR_pos) / 2
    ;cap range of random value drawn between 40 and 60
    set mean_STM max_val - random min_val
    set mean_SD max_val - random min_val
    set mean_UNI IVR_pos
    set mean_BEN max_val - random min_val
    set mean_CT (PDI_pos + LTO_neg) / 2
    set mean_SEC (MAS_pos + UAI_pos) / 2
    set mean_POW IVR_neg
    set mean_ACH (IDV_neg + MAS_pos + LTO_neg) / 3
  ]
  
  if hofstede-schwartz-mapping-mode = "empirical & theoretical" [
    set mean_HED IVR_pos
    set mean_STM max_val - random min_val
    set mean_SD IDV_pos
    set mean_UNI max_val - random min_val
    set mean_BEN max_val - random min_val
    set mean_CT (PDI_pos + IDV_neg + LTO_neg + IVR_neg) / 4
    set mean_SEC UAI_pos
    set mean_POW (PDI_pos + MAS_pos) / 2
    set mean_ACH MAS_pos
  ]
  
  ;;; CULTURAL TIGHTNESS MAPPING ;;;
  
  let max_CLT 100
  let CLT cultural-tightness / (max_CLT / max-value-std-dev)
  let SD clamp min-value-std-dev max-value-std-dev (max-value-std-dev - CLT)
  ;calibrate value-std-dev according to country's tightness score
  set value-std-dev SD
  
  ;alpha determines output (y) for central value (i.e. x = 50)
  let alpha 50
  ;beta determines degree to which the logistic function distorts extreme values (i.e. values close to 0 or to 1) of the input (Vraw)
  ;NOTE: beta is dependent on magnitude of SD -> High values for SD will lead to a stronger distortion of extreme values for Vraw
  let max-beta 5.5
  let beta (0.01 * max-beta) - (value-std-dev * (0.01 * cultural-tightness-function-modifier))
  let product alpha * beta
  
  ;Vraw is computed on the basis of Hofstede dims
  ;Vfinal is the mean that is used to calibrate the agent's value system
  ;If Vraw is extreme (i.e. smaller than 10 or greater than 90), it will be transformed into a number that lies closer to alpha (alpha=50)
  let Vraw (list
    mean_HED
    mean_STM
    mean_SD
    mean_UNI
    mean_BEN
    mean_CT
    mean_SEC
    mean_POW
    mean_ACH)
  
  let max_value_level 100
  let Vfinal []
  
  ;loop through agent value system and transform the 'extreme' means (i.e. those that are smaller than 10 or higher than 90)
  foreach Vraw [
    vmean -> if vmean <= 10 or vmean >= 90 [
      ;for values that hold 'extreme' levels, apply the logistic function in order pull extreme means closer to alpha (alpha = 50)
      ;beta modulates the strength of the pull towards alpha; beta is dependent upon SD which is related to cultural tightness
      set vmean (max_value_level / (1 + e ^ (product - (vmean * beta))))
    ]
    ;add vmeans to Vfinal
    set Vfinal lput vmean Vfinal
  ]
  
  ask people [
    set importance-given-to-hedonism-value clamp 0.01 100 (random-normal (item 0 Vfinal) value-std-dev)
    set importance-given-to-stimulation-value clamp 0.01 100 (random-normal (item 1 Vfinal) value-std-dev)
    set importance-given-to-self-direction-value clamp 0.01 100 (random-normal (item 2 Vfinal) value-std-dev)
    set importance-given-to-universalism-value clamp 0.01 100 (random-normal (item 3 Vfinal) value-std-dev)
    set importance-given-to-benevolence-value clamp 0.01 100 (random-normal (item 4 Vfinal) value-std-dev)
    set importance-given-to-conformity-tradition-value clamp 0.01 100 (random-normal (item 5 Vfinal) value-std-dev)
    set importance-given-to-security-value clamp 0.01 100 (random-normal (item 6 Vfinal) value-std-dev)
    set importance-given-to-power-value clamp 0.01 100 (random-normal (item 7 Vfinal) value-std-dev)
    set importance-given-to-achievement-value clamp 0.01 100 (random-normal (item 8 Vfinal) value-std-dev)
  ]
  
end

;Increase logical consistency of agent value systems
;That is, values placed closer to one another on the Schwartz value circumplex model should have somewhat similar importance levels
;Values placed further from one another on the Schwartz model should have dissimilar importance levels
to increase-logical-consistency-of-agent-value-systems
  ask people [
    
    let value_system (list
      importance-given-to-hedonism-value
      importance-given-to-stimulation-value
      importance-given-to-self-direction-value
      importance-given-to-universalism-value
      importance-given-to-benevolence-value
      importance-given-to-conformity-tradition-value
      importance-given-to-security-value
      importance-given-to-power-value
      importance-given-to-achievement-value)
    
    let value_system_copy value_system
    
    let N length value_system_copy
    
    let index 0
    let index_i 0
    let index_j 0
    
    let Vi 0
    let Vj 0
    let Vi_update 0
    let Vj_update 0
    
    while [index < N ] [
      ;load unaltered Vi
      set Vi item index value_system_copy
      
      ;walk through value system and compare each index the rest starting with item 0 thru length of list (9 values)
      set index_i index
      set index_j index_i + 1
      
      while [index_j < N] [
        ;load unaltered Vj
        set Vj item index_j value_system_copy
        
        set Vi_update item 0 calibrate-values index_i index_j value_system_copy
        set Vj_update item 1 calibrate-values index_i index_j value_system_copy
        
        if Vi_update != Vi [
          set value_system_copy replace-item index_i value_system_copy Vi_update
          ;update Vi
          set Vi Vi_update
        ]
        
        if Vj_update != Vj [
          set value_system_copy replace-item index_j value_system_copy Vj_update
        ]
        set index_j index_j + 1
      ]
      set index index + 1
    ]
    
    ;check whether values have changed as a consequence of the foregoing calibration procedure
    ;first create some easy-to-work-with variables
    let HED_index position importance-given-to-hedonism-value value_system
    let STM_index position importance-given-to-stimulation-value value_system
    let SD_index position importance-given-to-self-direction-value value_system
    let UNI_index position importance-given-to-universalism-value value_system
    let BEN_index position importance-given-to-benevolence-value value_system
    let CT_index position importance-given-to-conformity-tradition-value value_system
    let SEC_index position importance-given-to-security-value value_system
    let POW_index position importance-given-to-power-value value_system
    let ACH_index position importance-given-to-achievement-value value_system
    ;check whether values have changed
    let value_changed? (map != value_system_copy value_system)
    let changed_value_indices return-position-of-item-from-list true value_changed?
    ;alter the agent's value system accordingly
    ifelse empty? changed_value_indices [
      stop
    ][
      if member? HED_index changed_value_indices [set importance-given-to-hedonism-value item HED_index value_system_copy]
      if member? STM_index changed_value_indices [set importance-given-to-stimulation-value item STM_index value_system_copy]
      if member? SD_index changed_value_indices [set importance-given-to-self-direction-value item SD_index value_system_copy]
      if member? UNI_index changed_value_indices [set importance-given-to-universalism-value item UNI_index value_system_copy]
      if member? BEN_index changed_value_indices [set importance-given-to-benevolence-value item BEN_index value_system_copy]
      if member? CT_index changed_value_indices [set importance-given-to-conformity-tradition-value item CT_index value_system_copy]
      if member? SEC_index changed_value_indices [set importance-given-to-security-value item SEC_index value_system_copy]
      if member? POW_index changed_value_indices [set importance-given-to-power-value item POW_index value_system_copy]
      if member? ACH_index changed_value_indices [set importance-given-to-achievement-value item ACH_index value_system_copy]
    ]
  ]
end

;scores taken from https://www.hofstede-insights.com/product/compare-countries/
to load-nations-cultural-profile-settings
  
  if control-for-non-cultural-country-specific-factors? [
    set load-country-specific-settings "World"
  ]
  
  if load-country-specific-settings = "Custom" [
    set power-distance power-distance
    set individualism-vs-collectivism individualism-vs-collectivism
    set masculinity-vs-femininity masculinity-vs-femininity
    set uncertainty-avoidance uncertainty-avoidance
    set long-vs-short-termism long-vs-short-termism
    set indulgence-vs-restraint indulgence-vs-restraint
    set cultural-tightness cultural-tightness
    stop
  ]
  
  let country-specific-data-list []
  file-open "country-specific-data.csv"
  while [not file-at-end? ] [
    let csv file-read-line
    set csv word csv ";"  ; add comma for loop termination 
    let mylist []  ; list of values 
    while [not empty? csv] 
    [
      let $x position ";" csv 
      let $item substring csv 0 $x  ; extract item 
      carefully [set $item read-from-string $item][] ; convert if number 
      set mylist lput $item mylist  ; append to list 
      set csv substring csv ($x + 1) length csv  ; remove item and comma 
    ] 
    if first mylist = load-country-specific-settings [
      set country-specific-data-list but-first mylist ]
  ]
  if empty? country-specific-data-list [error (sentence "Country is not in country-specific-data file" load-country-specific-settings)]
  file-close
  
  ;create copy of country-specific-data used for experimentation where hofstede dimensions are calibrated independently from other country specific variables.
  let alternate-country-specific-data-list []
  file-open "country-specific-data.csv"
  while [not file-at-end? ] [
    let csv file-read-line
    set csv word csv ";"
    let mylist []
    while [not empty? csv] 
    [
      let $x position ";" csv 
      let $item substring csv 0 $x
      carefully [set $item read-from-string $item][]
      set mylist lput $item mylist
      set csv substring csv ($x + 1) length csv
    ]
    if first mylist = load-country-hofstede-scores [
      set alternate-country-specific-data-list but-first mylist ]
  ]
  if empty? alternate-country-specific-data-list [error (sentence "Country is not in country-specific-data file" load-country-hofstede-scores)]
  file-close
  
  if sync-cultural-and-demographic-settings? [
    set household-profiles load-country-specific-settings
    set ratio-adults-homes item 0 country-specific-data-list
    set ratio-retired-couple-homes item 1 country-specific-data-list
    set ratio-family-homes item 2 country-specific-data-list
    set ratio-multi-generational-homes item 3 country-specific-data-list
    set probability-shopkeeper item 11 country-specific-data-list
    set probability-university-personel item 12 country-specific-data-list
    set probability-school-personel item 13 country-specific-data-list
    set probability-hospital-personel item 14 country-specific-data-list
    set ratio-workers-and-retired-owning-cars item 15 country-specific-data-list
    set ratio-hospital-beds-per-household item 16 country-specific-data-list
    
    set #adults-homes floor (#households * ratio-adults-homes)
    set #retired-couple-homes floor (#households * ratio-retired-couple-homes)
    set #family-homes floor (#households * ratio-family-homes)
    set #multi-generational-homes #households - (#adults-homes + #retired-couple-homes + #family-homes)
    set #workers-to-create #adults-homes + (#family-homes * 2) + (#multi-generational-homes * 2)
    set #students-to-create #adults-homes 
    set #youth-to-create (#family-homes * 2) + (#multi-generational-homes * 2)
    set #retireds-to-create (#retired-couple-homes * 2) +  (#multi-generational-homes * 2)
    set #people-to-create #retireds-to-create + #youth-to-create + #students-to-create + #workers-to-create
    set #workers-in-workplace-to-create floor #workers-to-create * ( 1 - probability-hospital-personel - probability-school-personel - probability-university-personel - probability-shopkeeper) 
    
    set ratio-motorized-work 0.618
    set ratio-motorized-essential-shop 0.464 
    set ratio-motorized-non-essential-shop 0.464
    set ratio-motorized-school 0.194
    set ratio-motorized-university 0.304
    set ratio-motorized-private-leisure 0.49
    set ratio-motorized-public-leisure 0.49
  ]
  
  ;Calibrate the 7x cultural variables
  ifelse manual-calibration-of-cultural-vars? [
    set power-distance power-distance
    set individualism-vs-collectivism individualism-vs-collectivism
    set masculinity-vs-femininity masculinity-vs-femininity
    set uncertainty-avoidance uncertainty-avoidance
    set long-vs-short-termism long-vs-short-termism
    set indulgence-vs-restraint indulgence-vs-restraint
    set cultural-tightness cultural-tightness
  ][
    ifelse control-for-non-cultural-country-specific-factors? [
      set power-distance item 4 alternate-country-specific-data-list
      set individualism-vs-collectivism item 5 alternate-country-specific-data-list
      set masculinity-vs-femininity item 6 alternate-country-specific-data-list
      set uncertainty-avoidance item 7 alternate-country-specific-data-list
      set long-vs-short-termism item 8 alternate-country-specific-data-list
      set indulgence-vs-restraint item 9 alternate-country-specific-data-list
      set cultural-tightness round item 10 alternate-country-specific-data-list
    ][
      set load-country-hofstede-scores load-country-specific-settings
      set power-distance item 4 country-specific-data-list
      set individualism-vs-collectivism item 5 country-specific-data-list
      set masculinity-vs-femininity item 6 country-specific-data-list
      set uncertainty-avoidance item 7 country-specific-data-list
      set long-vs-short-termism item 8 country-specific-data-list
      set indulgence-vs-restraint item 9 country-specific-data-list
      set cultural-tightness round item 10 country-specific-data-list 
    ]
  ]
  
end

;the computational procedure within this reporter is based on Heidari et al. (2018)
to-report calibrate-values [#index_i #index_j #value-system]
  
  ;Load value levels into local variable
  let V_i (item #index_i #value-system)
  let V_j (item #index_j #value-system)
  
  ;determine difference between indices (i.e. distance between values on the Schwartz circumplex)
  let d_index abs (#index_i - #index_j)
  ;determine difference in value levels
  let d_V abs (V_i - V_j)
  ;load calibration factor (a lower calibration factor means that values placed close to one another on the Schwartz circumplex will hold more similar importance levels)
  ;default setting for value-system-calibration-factor is 25 (based on Heidari et al., 2018)
  let cf value-system-calibration-factor
  
  ;initiate boundaries LB (lower bound), UB (upper bound) (this is based on condition 1; see Heidari et al., 2018)
  let LB 0
  let UB 0
  let UB_i d_index * cf
  let UB_j (10 - d_index) * cf
  
  ifelse d_index <= 5 [
    set UB UB_i
  ][
    set UB UB_j
  ]
  
  ;d_Vc is constrained (c) difference (d) between value levels (V)
  let d_Vc 0
  ifelse d_V > UB [
    ;if difference between value levels is higher than UB, set dVc to UB
    set d_Vc UB
  ][
    ;if difference between value levels is NOT higher than UB, set dVc to dV
    set d_Vc d_V
  ]
  
  ;determine difference between unconstrained delta value levels [dV] and constrained delta value levels [dVc]
  let diff_dV_dVc (d_V - d_Vc)
  
  let delta 0
  
  ;ONLY if dV > dVc, then values move closer towards one another as to respect the condition LB < dV < UB
  if d_V > d_Vc [
    set delta diff_dV_dVc / 2
    ifelse V_i > V_j [
      ;if Vi is larger than Vj, then Vi decreases and Vj increases
      set V_i V_i - delta
      set V_j V_j + delta
    ][
      ;if Vi is smaller than Vj, then Vi increases and Vj decreases
      set V_i V_i + delta
      set V_j V_j - delta
    ]
  ]
  report (list V_i V_j)
end

to-report return-position-of-item-from-list [#criteria #list]
  let indices n-values length #list [ i -> i ]
  let result filter [ i -> item i #list = #criteria ] indices
  report result
end

;This to-report procedure takes a list and transforms it into a string of values separated by '#sep'
;This reporter is used for obtaining agent-level data from behaviorspace experiments
to-report transform-list-to-separated-string [#list #sep]
  report reduce [[x y] -> (word x #sep y)] #list
end

